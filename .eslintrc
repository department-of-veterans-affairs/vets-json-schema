{
  "env": {
    "browser": true,
    "es6": true
  },
  "extends": ["airbnb-base", "plugin:prettier/recommended"],
  "plugins": ["fp", "chai-expect", "mocha", "prettier"],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly",
    "describe": "readonly"
  },
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "rules": {
    // Override airbnb style.
    "prettier/prettier": "error",
    "camelcase": [2, { "properties": "always" }],
    "fp/no-proxy": 2, // IE 11 has not polyfill for Proxy
    "func-names": 2,
    "import/no-extraneous-dependencies": 0,
    "no-console": 2,
    "no-negated-condition": 0, // Sometimes negated conditions are easier to understand.
    "no-plusplus": 0,
    "import/no-cycle": 0,
    "import/prefer-default-export": 0,
    "no-underscore-dangle": 0, // We have build flags that use this
    "import/no-dynamic-require":  0,
    "global-require": 0,
    "import/named": 0,
    "no-unused-vars": [
      2,
      { "args": "after-used", "argsIgnorePattern": "^_", "vars": "local" }
    ],
    "no-restricted-imports": ["error", "raven"],
    "prefer-rest-params": 2,

    // Additional plugins
    "mocha/no-exclusive-tests": 2,

    // this is the airbnb default, minus for..of
    "no-restricted-syntax": [
      2,
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ]
  }
}
