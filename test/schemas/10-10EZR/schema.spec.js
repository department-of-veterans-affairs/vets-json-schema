import ajv from 'ajv';
import schemas from '../../../dist/schemas';
import { itValidatesInsuranceProvider } from '../../support/10-10-forms/shared-tests';

const applicationSchema = schemas['10-10EZ'];
const jsonValidator = ajv({ allErrors: true, errorDataPath: 'property', removeAdditional: true, useDefaults: true });

function definitionValidator(field) {
  const tinySchema = {
    $schema: 'http://json-schema.org/draft-04/schema#',
    type: 'object',
    properties: {
      field: applicationSchema.definitions[field],
    },
  };

  return function validator(value) {
    const fn = jsonValidator.compile(tinySchema);
    return fn({ field: value });
  };
}

// TODO: These should be cross checked against what's generated by common/veteran.js and possibly
// what's in utils/validations.js for a more inter-connected verification that we're sending and
// getting what's expected all around.
describe('10-10EZR json schema', () => {
  describe('provider', () => {
    const providerValidation = definitionValidator('provider');

    itValidatesInsuranceProvider(providerValidation);
  });
});
